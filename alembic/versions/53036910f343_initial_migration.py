"""Initial migration

Revision ID: 53036910f343
Revises: 
Create Date: 2025-06-01 11:14:39.589608

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '53036910f343'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # The following columns may already exist, so we skip adding them if present.
    # op.add_column('esrv_auth_logs', sa.Column('auth_type', sa.String(), nullable=False, server_default='user'))
    # op.add_column('esrv_auth_logs', sa.Column('identifier', sa.String(), nullable=False, server_default='unknown'))
    # op.add_column('esrv_auth_logs', sa.Column('ip_address', sa.String(), nullable=True))
    # op.add_column('esrv_auth_logs', sa.Column('created_at', sa.DateTime(), nullable=True))
    # SQLite does not support ALTER COLUMN, so we skip changing 'message' type/nullability here.
    # If you need to change the type/nullability, do a manual migration as described in Alembic docs.
    # op.drop_column('esrv_auth_logs', 'peer')
    # op.drop_column('esrv_auth_logs', 'timestamp')
    # op.drop_column('esrv_auth_logs', 'username')
    # op.alter_column('esrv_custom_headers', 'created_at',
    #            existing_type=sa.TIMESTAMP(),
    #            type_=sa.DateTime(),
    #            existing_nullable=True,
    #            existing_server_default=sa.text("'2025-05-31 00:00:00'"))
    op.drop_index(op.f('idx_esrv_custom_headers_domain'), table_name='esrv_custom_headers')
    op.drop_index(op.f('idx_esrv_dkim_keys_domain'), table_name='esrv_dkim_keys')
    # op.alter_column('esrv_domains', 'created_at',
    #            existing_type=sa.TIMESTAMP(),
    #            type_=sa.DateTime(),
    #            existing_nullable=True,
    #            existing_server_default=sa.text("'2025-05-31 00:00:00'"))
    op.drop_column('esrv_domains', 'requires_auth')
    op.add_column('esrv_email_logs', sa.Column('from_address', sa.String(), nullable=False, server_default='unknown'))
    op.add_column('esrv_email_logs', sa.Column('to_address', sa.String(), nullable=False, server_default='unknown'))
    op.add_column('esrv_email_logs', sa.Column('subject', sa.Text(), nullable=True))
    op.add_column('esrv_email_logs', sa.Column('message', sa.Text(), nullable=True))
    op.add_column('esrv_email_logs', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.drop_index(op.f('idx_esrv_email_logs_mail_from'), table_name='esrv_email_logs')
    op.drop_index(op.f('idx_esrv_email_logs_timestamp'), table_name='esrv_email_logs')
    # op.drop_column('esrv_email_logs', 'rcpt_tos')
    # op.drop_column('esrv_email_logs', 'content')
    # op.drop_column('esrv_email_logs', 'dkim_signed')
    # op.drop_column('esrv_email_logs', 'peer')
    # op.drop_column('esrv_email_logs', 'message_id')
    # op.drop_column('esrv_email_logs', 'mail_from')
    # op.drop_column('esrv_email_logs', 'timestamp')
    # op.alter_column('esrv_users', 'created_at',
    #            existing_type=sa.TIMESTAMP(),
    #            type_=sa.DateTime(),
    #            existing_nullable=True,
    #            existing_server_default=sa.text("'2025-05-31 00:00:00'"))
    op.drop_index(op.f('idx_esrv_users_domain'), table_name='esrv_users')
    op.drop_index(op.f('idx_esrv_users_email'), table_name='esrv_users')
    # op.alter_column('esrv_whitelisted_ips', 'created_at',
    #            existing_type=sa.TIMESTAMP(),
    #            type_=sa.DateTime(),
    #            existing_nullable=True,
    #            existing_server_default=sa.text("'2025-05-31 00:00:00'"))
    op.drop_index(op.f('idx_esrv_whitelisted_ips_domain'), table_name='esrv_whitelisted_ips')
    op.drop_index(op.f('idx_esrv_whitelisted_ips_ip'), table_name='esrv_whitelisted_ips')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_esrv_whitelisted_ips_ip'), 'esrv_whitelisted_ips', ['ip_address'], unique=False)
    op.create_index(op.f('idx_esrv_whitelisted_ips_domain'), 'esrv_whitelisted_ips', ['domain_id'], unique=False)
    op.alter_column('esrv_whitelisted_ips', 'created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text("'2025-05-31 00:00:00'"))
    op.create_index(op.f('idx_esrv_users_email'), 'esrv_users', ['email'], unique=False)
    op.create_index(op.f('idx_esrv_users_domain'), 'esrv_users', ['domain_id'], unique=False)
    op.alter_column('esrv_users', 'created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text("'2025-05-31 00:00:00'"))
    op.add_column('esrv_email_logs', sa.Column('timestamp', sa.DATETIME(), nullable=False))
    op.add_column('esrv_email_logs', sa.Column('mail_from', sa.VARCHAR(), nullable=False))
    op.add_column('esrv_email_logs', sa.Column('message_id', sa.VARCHAR(), nullable=False))
    op.add_column('esrv_email_logs', sa.Column('peer', sa.VARCHAR(), nullable=False))
    op.add_column('esrv_email_logs', sa.Column('dkim_signed', sa.BOOLEAN(), nullable=True))
    op.add_column('esrv_email_logs', sa.Column('content', sa.TEXT(), nullable=False))
    op.add_column('esrv_email_logs', sa.Column('rcpt_tos', sa.VARCHAR(), nullable=False))
    op.create_index(op.f('idx_esrv_email_logs_timestamp'), 'esrv_email_logs', ['timestamp'], unique=False)
    op.create_index(op.f('idx_esrv_email_logs_mail_from'), 'esrv_email_logs', ['mail_from'], unique=False)
    op.drop_column('esrv_email_logs', 'created_at')
    op.drop_column('esrv_email_logs', 'message')
    op.drop_column('esrv_email_logs', 'subject')
    op.drop_column('esrv_email_logs', 'to_address')
    op.drop_column('esrv_email_logs', 'from_address')
    op.add_column('esrv_domains', sa.Column('requires_auth', sa.BOOLEAN(), nullable=True))
    op.alter_column('esrv_domains', 'created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text("'2025-05-31 00:00:00'"))
    op.create_index(op.f('idx_esrv_dkim_keys_domain'), 'esrv_dkim_keys', ['domain_id'], unique=False)
    op.create_index(op.f('idx_esrv_custom_headers_domain'), 'esrv_custom_headers', ['domain_id'], unique=False)
    op.alter_column('esrv_custom_headers', 'created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text("'2025-05-31 00:00:00'"))
    op.add_column('esrv_auth_logs', sa.Column('username', sa.VARCHAR(), nullable=True))
    op.add_column('esrv_auth_logs', sa.Column('timestamp', sa.DATETIME(), nullable=False))
    op.add_column('esrv_auth_logs', sa.Column('peer', sa.VARCHAR(), nullable=False))
    op.alter_column('esrv_auth_logs', 'message',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               nullable=False)
    op.drop_column('esrv_auth_logs', 'created_at')
    op.drop_column('esrv_auth_logs', 'ip_address')
    op.drop_column('esrv_auth_logs', 'identifier')
    op.drop_column('esrv_auth_logs', 'auth_type')
    # ### end Alembic commands ###
